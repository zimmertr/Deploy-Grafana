version: '3.1'

services:
  # Grafana backend
  postgres:
    restart: always
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres
    user: "1000"
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - 5432:5432
    volumes:
      - /opt/tks/postgres:/var/lib/postgresql/data

  # Metrics backend
  influxdb:
    restart: always
    image: influxdb:${INFLUXDB_VERSION}
    container_name: influxdb
    user: "1000"
    environment:
      INFLUXDB_DB: ${INFLUXDB_DATABASE}
      INFLUXDB_ADMIN_USER: ${INFLUXDB_USERNAME}
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_PASSWORD}
    ports:
      - 8086:8086/tcp
      - 8089:8089/udp
    volumes:
      - /opt/tks/influxdb/:/var/lib/influxdb
      - /etc/tks/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
      - /etc/tks/influxdb/bootstrap.sh:/docker-entrypoint-initdb.d/zbootstrap.sh

  # Metrics backend
  prometheus:
    restart: always
    image: prom/prometheus:${PROMETHEUS_VERSION}
    container_name: prometheus
    user: "1000"
    ports:
      - 9090:9090
    volumes:
      - /etc/tks/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /opt/tks/prometheus/:/prometheus/

  # Make sure Postgres is up before Grafana attempts to startup, or it will
  postgres_wait:
    restart: on-failure
    depends_on:
      - postgres
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres-wait
    command: pg_isready -h postgres -p 5432 -U tks
    links:
      - postgres

  # Grafana frontend
  grafana:
    restart: always
    depends_on:
      - postgres_wait
      - influxdb
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: grafana
    user: "1000" # Should probably variablize this UID.
    environment:
      GF_INSTALL_PLUGINS: ${GRAFANA_PLUGINS}
    ports:
      - 3000:3000
    links:
      - postgres
      - influxdb
    volumes:
      - /etc/tks/grafana/grafana.ini:/etc/grafana/grafana.ini
      - /etc/tks/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - /etc/tks/grafana/dashboards/:/etc/grafana/provisioning/dashboards/
      - /opt/tks/grafana/:/var/lib/grafana
